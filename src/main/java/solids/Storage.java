package solids;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.concurrent.Future;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;

/**
 * Auto generated code.<br>
 * <strong>Do not modify!</strong><br>
 * Please use {@link org.web3j.codegen.SolidityFunctionWrapperGenerator} to update.
 *
 * <p>Generated with web3j version 2.2.1.
 */
public final class Storage extends Contract {
    private static final String BINARY = "6060604052341561000f57600080fd5b5b5b5b610c64806100216000396000f300606060405236156100805763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663248bfc3b8114610085578063300ebbf61461012c57806358aa61e71461023757806383197ef0146102e55780638e84a8c1146102fa578063b48cc6e5146103a1578063ff30b71714610406575b600080fd5b341561009057600080fd5b61011860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496506104ef95505050505050565b604051901515815260200160405180910390f35b341561013757600080fd5b6101bf60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496506105d095505050505050565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101fc5780820151818401525b6020016101e3565b50505050905090810190601f1680156102295780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561024257600080fd5b61011860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496505084359460200135935061074792505050565b604051901515815260200160405180910390f35b34156102f057600080fd5b6102f861091f565b005b341561030557600080fd5b61038f60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650509335935061093a92505050565b60405190815260200160405180910390f35b34156103ac57600080fd5b61011860046024813581810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650610a2195505050505050565b604051901515815260200160405180910390f35b341561041157600080fd5b61011860046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650610a9c95505050505050565b604051901515815260200160405180910390f35b600060206040519081016040526000846040518082805190602001908083835b6020831061052f57805182525b601f19909201916020918201910161050f565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051908190039020836040518082805190602001908083835b6020831061059457805182525b601f199092019160209182019101610574565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051506001925050505b92915050565b6105d8610b86565b6000836040518082805190602001908083835b6020831061060b57805182525b601f1990920191602091820191016105eb565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600101826040518082805190602001908083835b6020831061067257805182525b601f199092019160209182019101610652565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107395780601f1061070e57610100808354040283529160200191610739565b820191906000526020600020905b81548152906001019060200180831161071c57829003601f168201915b505050505090505b92915050565b6000826000866040518082805190602001908083835b6020831061077d57805182525b601f19909201916020918201910161075d565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051908190039020856040518082805190602001908083835b602083106107e257805182525b601f1990920191602091820191016107c2565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051908190039020600084815260209190915260408082209290925584918790518082805190602001908083835b6020831061085c57805182525b601f19909201916020918201910161083c565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051908190039020856040518082805190602001908083835b602083106108c157805182525b601f1990920191602091820191016108a1565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405190819003902060008481526020919091526040902054141561091357506001610917565b5060005b949350505050565b3373ffffffffffffffffffffffffffffffffffffffff16ff5b565b600080846040518082805190602001908083835b6020831061096e57805182525b601f19909201916020918201910161094e565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051908190039020836040518082805190602001908083835b602083106109d357805182525b601f1990920191602091820191016109b3565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040519081900390206000838152602091909152604090205490505b9392505050565b600060206040519081016040526000836040518082805190602001908083835b60208310610a6157805182525b601f199092019160209182019101610a41565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051506001925050505b919050565b6000816000856040518082805190602001908083835b60208310610ad257805182525b601f199092019160209182019101610ab2565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600101846040518082805190602001908083835b60208310610b3957805182525b601f199092019160209182019101610b19565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020908051610b7d929160200190610b98565b505b9392505050565b60206040519081016040526000815290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610bd957805160ff1916838001178555610c06565b82800160010185558215610c06579182015b82811115610c06578251825591602001919060010190610beb565b5b50610c13929150610c17565b5090565b610c3591905b80821115610c135760008155600101610c1d565b5090565b905600a165627a7a72305820f3fe9662aa5b8f508f68a0cdd7ee7a2d194bbee47c1951892522d94f5b567f800029";

    private Storage(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    private Storage(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public Future<TransactionReceipt> addFile(Utf8String _propertyName, Utf8String _fileName) {
        Function function = new Function("addFile", Arrays.<Type>asList(_propertyName, _fileName), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<Utf8String> getPropertyMetadata(Utf8String _propertyName, Utf8String _key) {
        Function function = new Function("getPropertyMetadata", 
                Arrays.<Type>asList(_propertyName, _key), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<TransactionReceipt> uploadFile(Utf8String _propertyName, Utf8String _fileName, Bytes32 _data, Uint256 count) {
        Function function = new Function("uploadFile", Arrays.<Type>asList(_propertyName, _fileName, _data, count), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<TransactionReceipt> destroy() {
        Function function = new Function("destroy", Arrays.<Type>asList(), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<Bytes32> getFile(Utf8String _propertyName, Utf8String _fileName, Uint256 count) {
        Function function = new Function("getFile", 
                Arrays.<Type>asList(_propertyName, _fileName, count), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeCallSingleValueReturnAsync(function);
    }

    public Future<TransactionReceipt> addProperty(Utf8String _propertyName) {
        Function function = new Function("addProperty", Arrays.<Type>asList(_propertyName), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public Future<TransactionReceipt> addPropertyMetadata(Utf8String _propertyName, Utf8String _key, Utf8String _value) {
        Function function = new Function("addPropertyMetadata", Arrays.<Type>asList(_propertyName, _key, _value), Collections.<TypeReference<?>>emptyList());
        return executeTransactionAsync(function);
    }

    public static Future<Storage> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, BigInteger initialWeiValue) {
        return deployAsync(Storage.class, web3j, credentials, gasPrice, gasLimit, BINARY, "", initialWeiValue);
    }

    public static Future<Storage> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, BigInteger initialWeiValue) {
        return deployAsync(Storage.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "", initialWeiValue);
    }

    public static Storage load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Storage(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    public static Storage load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Storage(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }
}
